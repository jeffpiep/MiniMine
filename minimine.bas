GR.0
P=DPEEK(88)
W=40:L=23
FOR I=1 TO W
	POKE P,128:POKE P+W*(L-1),128
	P=P+1
NEXT I
FOR I=1 TO L-2
	POKE P,128:POKE P+W-1,128
	IF I>10 
		FOR J=1 TO 38
			POKE P+J,10
		NEXT J
	ENDIF
	P=P+W
NEXT I
P=DPEEK(88)+10*40+19
Q=P
T0=0
F0=1
BASE = 0: BREAK =  1: BUILD = 2: FIGHT = 3: JUMPING = 4
STATE = BASE
JUMPCTR = 0
DO
	S=STICK(0)
	F1=STRIG(0) : F=F1-F0 : F0=F1
	DX = (S = 5 OR S = 6 OR S = 7) - (S = 9 OR S = 10 OR S = 11)
	DY = (S = 5 OR S = 9 OR S = 13) - (S = 6 OR S = 10 OR S = 14)
	IF STATE = BASE
	'check for falling
	'check for l/r then u/d
	'check for button
		IF PEEK(P+W)=0
			'UPDATE P
			Q=P+W
		ELIF F<0
			IF S=15
				STATE = FIGHT
			ELSE
				STATE = JUMPING
			ENDIF
		ELIF DX<>0 OR DY<>0
			N=P+DX+W*DY
			'CHECK N-POS FOR WALL OR BRICK
			IF PEEK(N)<>0 AND PEEK(N)<>128
				STATE=BREAK
			ELIF DX<>0
				'BASE SIDEWAYS OR DIAGONAL
				IF DY=-1 AND PEEK(P+DX)=0 
					Q=P+DX
				ELIF PEEK(N)=0 
					Q=N
				ENDIF
			ENDIF
		ENDIF
	ELIF STATE = BREAK
		POKE N,PEEK(N)-1
		IF PEEK(N)=0 OR S=15 THEN STATE = BASE
	ELIF STATE = BUILD
		IF F<0 
		IF S=15 
		STATE = BASE
		ELSE
		POKE P+T0,10
		IF PEEK(P-DX)=0 THEN Q=P-DX
		ENDIF
		
		ELSE
			T1=DX+W*DY
			'IF T1=0 THEN T1=T0
			IF PEEK(P+T1)=0 THEN POKE P+T1,84
			IF T0<>T1 THEN IF PEEK(P+T0)=84 THEN POKE P+T0,0
			T0=T1
		ENDIF
	ELIF STATE = FIGHT
		IF F>0 THEN STATE=BUILD
	ELIF STATE = JUMPING
		JUMPCTR=JUMPCTR+1
		IF JUMPCTR = 1 AND PEEK(P+DX-W)=0 THEN Q=P+DX-W
		IF (JUMPCTR = 2 OR JUMPCTR = 3) AND PEEK(P+DX)=0 THEN Q=P+DX
		IF JUMPCTR = 4 
			STATE = BASE
			JUMPCTR=0
		ENDIF
	ENDIF
PAUSE 1
POKE P,0
POKE Q,64
P=Q
IF KEY() THEN EXIT
LOOP
